------------
FaaS-idéer
------------
1. extract-transform-load, dvs hämta data, bearbeta det, spara det/visa det. Ett exempel kunde vara att ladda väderdata.

2. stars, commits. etc on github, see https://www.openfaas.com/blog/serverless-single-page-app/

------------------------
Examples, tutorials, etc
------------------------
Det finns väldigt många bra exmepelkoder på https://github.com/openfaas/faas/tree/master/sample-functions och på https://github.com/orgs/faas-and-furious/repositories

utvärdering av FaaS kontra ms, https://www.infoq.com/articles/serverless-microservices-flexibility/

------
gitops
------
https://www.gitops.tech/

https://www.weave.works/technologies/gitops/

Det krävs att k8n-klustret kan kommunicera med git-repot (pull) eller tvärtom (push). Det första fallet sköts med en *operator*. Kolla om det finns sådana som kan användas med kind. Kolla om flux kan vara något, se tex https://searchitoperations.techtarget.com/tutorial/Try-out-this-GitOps-tutorial-with-Flux-and-Kubernetes och https://fluxcd.io/docs/get-started/

Flux is the GitOps operator for Kubernetes. It's an open source tool initially developed by Weaveworks and *later donated to the Cloud Native Computing Foundation*. AHA! Lovande!

Använd flagger för deployment (progressive delivery), se https://docs.flagger.app/

-----------------------------
Exempelapplikation: Soundgood
-----------------------------

1. Skriv hello world i alla språk och ramverk.
   Språk: Java, Typescript (eller JS), Python? Go?
   Ramverk: Spring
   Cluster: kind, kubernetes, istio, knative, flux, flagger
   
   Båda FaaS och inte FaaS
   
2. Skapa hela infrstrukturen
   Gitops, tester, loggning, datalagring, telemetry, kommunikation, transaktioner/saga?
   
3. Modellera Soundgood.

4. Skriv appen

-----------------------------
Vad gör ett ramverk för k8s?? 
-----------------------------
* Spring Cloud Kubernetes är funktionalitet för att anropa kubernetes-clustrets API från Java-koden.
* Spring Cloud är implementationer av typiska cloud-mönster, som gateway, service discovery, circuit breaker.
* En app i Spring Cloud är alltså en helt vanlig app i springmvc eller web flux.
* Spring cloud stream ska användas om kommunikationen sker med meddelanden istf http.

* Vertx och Quarkus funkar på liknande sätt, förmodligen gör alla andra också det. På vilket
  annat sätt skulle det kunna vara???

* Spring Native är en produkt för att köra spring boot-appar native på graalvm. Spring native är
  i beta 211001. 

-------
knative
-------
Knative är inte FaaS, eftersom den image som körs (kod + docker) ser ut exakt som den skulle gjort även om den körts direkt på k8s. Knative är istället till för att slippa hanteringen av pod/deployment/service, för att hantera autoscaling, för att hantera deployment (dela upp trafik på olika instanser) och för att hantera events (dvs koppla ihop noder). Notera att Knative alltså utför samma uppgift (dvs deployment) som flagger. Det är alltså inte meningsfullt att använda både knative och flagger, förmodligen är det inte ens möjligt.

Tekton har utvecklats tillsammans med (eller för) knative, det hette från början knative build. Tekton används för att automatiskt/gitops bygga images av källkod. 

------
ArgoCD
------
Argo är ett alternativ till flux. Denna blogg illustrerar hur argo och tekton tillsammans kan automatisera (gitops) hela CD-pipen från kod till deployad app, https://medium.com/ibm-garage/fun-with-gitops-stitching-kubernetes-tekton-and-argo-ee348afd0b08.

-----------
FaaS på k8s
-----------
Den starkaste andidaten för att köra FaaS på ett k8s-kluster är nog OpenFaaS. Andra kandidater kunde vara OpenWhisk, men den verkar krånglig och fokuserad på IBM; Kubeless, men den verkar inte vara väldigt aktivt underhållen och hanterar inte Java; Fn, men den kör nog bara på docker, inte k8s (stämmer det)? AWS lambda är antagligen den klart dominerande plattformen för FaaS (211007).

Se https://itnext.io/scaling-my-app-serverless-vs-kubernetes-cdb8adf446e1 för en översikt av k8s vs FaaS.

--------------------
arbetshypotes 211008
--------------------
k8s, istio, flux, flagger (över istio?), tekton, kustomize, knative-eventing?. Överväg att byta flux mot argocd, men går det att använda flagger utan flux? 

För att testa FaaS använd även OpenFaaS. 

Strunta alltså i knative?!? Alternativt strunta i flagger. Flagger verkar bättre på just deploy, knative verkar inte kunna automatiskt köra canary release, skalningen måste göras manuellt. Knative kanske dock har annan funktionalitet som flagger saknar? Går det att köra knative eventing utan knative serving? Flagger ersätter nämligen bara knative serving, det har inget med knative eventing att göra. 

FaaS verkar väl egentligen väldigt smart? Det känns lite onödigt att behöva packa in ett helt os i varenda container. Är inte FaaS klart användbart även om noden inte är 'ephemeral'? 
